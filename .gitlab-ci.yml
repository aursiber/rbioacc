image: r-base

stages:
  - build
  - document
  - check
  - test
  - deploy

before_script:
  - apt-get update

buildbinary:
  stage: build
  script:
    - r -e 'devtools::build(binary = TRUE)'

#r-build_test:
#  stage: build
#  script:
#    - "Rscript -e \"pkgbuild::compile_dll('rbioacc')\""
#    - "Rscript -e \"roxygen2::roxygenize('rbioacc', roclets=c('rd', 'collate', 'namespace'))\""
#    - "R CMD build rbioacc --resave-data --compact-vignettes=both"
#    - "R CMD check --as-cran $(ls -rt rbioacc_* |tail -1)"
#  artifacts:
#    paths:
#      - "$(ls -rt rbioacc_*.tar.gz |tail -1)"

documentation:
  stage: document
  script:
    - r inst/ci/document.R

checkerrors:
  stage: check
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["errors"]], character(0))) stop("Check with Errors")'

checkwarnings:
  stage: check
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["warnings"]], character(0))) stop("Check with Warnings")'

checknotes:
  stage: check
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["notes"]], character(0))) stop("Check with Notes")'

unittests:
  stage: test
  script:
    - r -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) stop("Some tests failed.")'

codecov:
  stage: test
  script:
    - r -e 'covr::codecov()'










